// <auto-generated />
using BFConfigApp.Data.AppData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BFConfigApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250724205004_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("BFConfigApp.Data.Models.CaseConfiguration", b =>
                {
                    b.Property<int>("ConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConfigurationName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsTableTop")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Linens")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxCashRange")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinCashRange")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalCaseNum")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("selectedInfra")
                        .HasColumnType("INTEGER");

                    b.HasKey("ConfigId");

                    b.ToTable("CaseConfigurations");
                });

            modelBuilder.Entity("BFConfigApp.Data.Models.CaseDetail", b =>
                {
                    b.Property<int>("CaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CaseName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CaseSessionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CaseType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KeyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CaseId");

                    b.HasIndex("CaseSessionId");

                    b.ToTable("CaseDetails");
                });

            modelBuilder.Entity("BFConfigApp.Data.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BFConfigApp.Data.Models.CaseDetail", b =>
                {
                    b.HasOne("BFConfigApp.Data.Models.CaseConfiguration", "CaseConfiguration")
                        .WithMany("CaseDetails")
                        .HasForeignKey("CaseSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaseConfiguration");
                });

            modelBuilder.Entity("BFConfigApp.Data.Models.CaseConfiguration", b =>
                {
                    b.Navigation("CaseDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
